version: '3.8'

services:

  db:
    image: postgres:15
    container_name: my_postgres_db
    restart: always
    env_file:
      - ./nodejs-api/.env
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
    - internal

  frontend:
    build: ./angular-qrcode
    container_name: proxicare-frontend
    expose:
    - "80"  
    depends_on:
      - backend
    restart: always
    networks:
      - internal

  backend:
    build: ./nodejs-api
    container_name: proxicare-backend
    ports:
      - "5000:5000"
    depends_on:
      - db
    environment:
      - NODE_ENV=production
    restart: always
    networks:
      - internal

  nginx:
    image: nginx:alpine
    container_name: nginx_reverse_proxy
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/cert.pem:/etc/ssl/certs/cert.pem:ro
      - ./nginx/key.pem:/etc/ssl/private/key.pem:ro
    depends_on:
      - frontend
      - backend
    networks:
      - internal

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    env_file:
      - ./nodejs-api/.env
    ports:
      - "5050:80"
    networks:
      - internal

networks:
  internal:
    driver: bridge

volumes:
  pg_data: